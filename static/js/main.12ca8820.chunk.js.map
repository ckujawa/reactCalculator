{"version":3,"sources":["components/Button.js","components/Viewport.js","components/Calculator.js","App.js","index.js"],"names":["ButtonSpan","styled","span","Button","e","this","props","updateValue","currentTarget","textContent","onClick","keyPressed","value","React","Component","View","div","ViewPort","displayValue","CalcDiv","Row","EqualsRow","Calculator","operators","updateCurrentValue","currentOp","state","currentOperation","reset","includes","elements","split","pop","join","calclulateAndUpdate","setState","calculateAndUpdate","bind","op","eq","prevValue","parseInt","c","length","oper","nextValue","toString","GlobalStyle","createGlobalStyle","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12ca8820.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ButtonSpan = styled.span`\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n    border: 2px solid var(--black);\r\n    color:  var(--black);\r\n    background: #F7CB9E;\r\n    font-size: 2em;\r\n    padding: 2px;\r\n`\r\n\r\nclass Button extends React.Component {\r\n    keyPressed(e) {\r\n        this.props.updateValue(e.currentTarget.textContent);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ButtonSpan onClick={e => { this.keyPressed(e) }}>\r\n                {this.props.value}\r\n            </ButtonSpan>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst View = styled.div`\r\n    background: var(--black);\r\n    color: #E9C9FF;\r\n    margin-top: 0;\r\n    height: 2.2rem;\r\n    font-family: Orbitron, sans-serif;\r\n    font-size: 2em;\r\n    text-align: right;\r\n    grid-column: 1 / -1;\r\n    padding: 5px 10px;\r\n`\r\n\r\nclass ViewPort extends React.Component {\r\n    render() {\r\n        return (\r\n            <View>{this.props.displayValue}</View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewPort;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './Button'\r\nimport ViewPort from './Viewport';\r\n\r\nconst CalcDiv = styled.div`\r\n  display: grid;\r\n  background: #AA92BA;\r\n  padding: 20px;\r\n  grid-row-gap: 5px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(50px, 1fr));\r\n  grid-column-gap: 5px;\r\n`\r\nconst EqualsRow = styled.div`\r\n  display: grid;\r\n  grid-column: 1 / -1;\r\n`\r\n\r\nclass Calculator extends React.Component {\r\n    operators = [\"-\", \"+\", \"÷\", \"×\"];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentOperation: \"0\",\r\n            reset: false\r\n        };\r\n        this.calclulateAndUpdate = this.calculateAndUpdate.bind(this);\r\n    }\r\n\r\n\r\n    calculateAndUpdate(e) {\r\n        let op = this.state.currentOperation;\r\n        const eq = op.split(' ');\r\n        let prevValue = parseInt(eq[0]);\r\n        for (var c = 1; c < eq.length; c++) {\r\n            if (this.operators.includes(eq[c])) {\r\n                const oper = eq[c];\r\n                c++;\r\n                const nextValue = eq[c];\r\n                switch (oper) {\r\n                    case \"+\":\r\n                        prevValue += parseInt(nextValue);\r\n                        break;\r\n                    case \"-\":\r\n                        prevValue -= parseInt(nextValue);\r\n                        break;\r\n                    case \"÷\":\r\n                        prevValue /= parseInt(nextValue);\r\n                        break;\r\n                    case \"×\":\r\n                        prevValue *= parseInt(nextValue);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        op = prevValue.toString();\r\n        this.setState({\r\n            currentOperation: op,\r\n            reset: true\r\n        });\r\n    }\r\n\r\n\r\n    updateCurrentValue = (e) => {\r\n        let currentOp = this.state.currentOperation;\r\n        let reset = this.state.reset;\r\n        if (reset && !(this.operators.includes(e) || 'C' === e || 'CE' === e)) {\r\n            currentOp = \"0\";\r\n        }\r\n        reset = false;\r\n        if (this.operators.includes(e)) {\r\n            currentOp += \" \" + e + \" \";\r\n        } else if (currentOp === \"0\") {\r\n            currentOp = e;\r\n        } else if (\"CE\" === e) {\r\n            const elements = currentOp.split(' ');\r\n            elements.pop();\r\n            currentOp = elements.join(' ');\r\n            currentOp += \" \";\r\n        } else if (\"C\" === e) {\r\n            currentOp = \"0\";\r\n        } else if (\"=\" === e) {\r\n            this.calclulateAndUpdate(e);\r\n            return;\r\n        } else {\r\n            currentOp += e;\r\n        }\r\n        this.setState({\r\n            currentOperation: currentOp,\r\n            reset: reset\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CalcDiv>\r\n                <h1>\r\n                    React Calculator\r\n                </h1>\r\n                <Row>\r\n                    <ViewPort displayValue={this.state.currentOperation} />\r\n                </Row>\r\n                <Row>\r\n                    <Button value=\"8\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"7\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"9\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"×\" updateValue={this.updateCurrentValue} ></Button>\r\n                </Row>\r\n                <Row>\r\n                    <Button value=\"4\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"5\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"6\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"÷\" updateValue={this.updateCurrentValue} ></Button>\r\n                </Row>\r\n                <Row>\r\n                    <Button value=\"1\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"2\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"3\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"-\" updateValue={this.updateCurrentValue} ></Button>\r\n                </Row>\r\n                <Row>\r\n                    <Button value=\"CE\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"C\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"0\" updateValue={this.updateCurrentValue} ></Button>\r\n                    <Button value=\"+\" updateValue={this.updateCurrentValue} ></Button>\r\n                </Row>\r\n                <EqualsRow>\r\n                    <Button value=\"=\" updateValue={this.updateCurrentValue} ></Button>\r\n                </EqualsRow>\r\n            </CalcDiv>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Calculator;","import React, { Component } from 'react';\nimport Calculator from './components/Calculator'\nimport { createGlobalStyle } from 'styled-components'\n\n\nconst GlobalStyle = createGlobalStyle`\n    @import url('https://fonts.googleapis.com/css?family=ZCOOL+XiaoWei');\n\n     :root{\n        --black: #161919;\n    }\n    body{\n        padding: 10px;\n        background-image: url('https://images.unsplash.com/photo-1518133835878-5a93cc3f89e5?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjE0NTg5fQ');\n    }\n    \n    .App {\n        height: 100vh;\n        width: 100vw;        \n        display: grid;\n        justify-content: center;\n        align-content: center;\n    }\n\n    h1 {\n      font-family: 'ZCOOL XiaoWei', serif;\n    }\n`\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <GlobalStyle />\n        <Calculator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}